name: Backend CI/CD for Foodgram

on:
  push:
    branches: [ main, master, develop ] # Триггер при push в эти ветки
  pull_request:
    branches: [ main, master, develop ] # Триггер при pull request в эти ветки

jobs:
  lint-and-test: # Название задачи (можете изменить)
    name: Linting # Отображаемое имя задачи
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Используйте ту же версию Python, что и в Dockerfile

    - name: Install Flake8
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Run Flake8
      # Проверяем только папку backend. Исключаем миграции и venv (если бы он был в backend).
      # Настройки Flake8 можно вынести в setup.cfg или .flake8 файл в корне проекта или в backend/
      run: flake8 backend/ --exclude=backend/migrations/,backend/venv/
      # Если Flake8 найдет ошибки, задача завершится с ошибкой.

  build-and-push-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-test # Эта задача начнется только после успешного завершения lint-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' # Публикуем образ только при push в main/master

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: . # Контекст сборки - корень репозитория (где docker-compose.yml и папки backend, frontend)
        dockerfile: backend/Dockerfile # Путь к Dockerfile бэкенда
        push: true # Публиковать образ
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/foodgram-st:latest # Тег образа. Замените 'foodgram_backend' на имя вашего репозитория на Docker Hub, если оно другое.
        # Можно добавить тегирование по SHA коммита или версии для более точного версионирования:
        # tags: |
        #   ${{ secrets.DOCKERHUB_USERNAME }}/foodgram_backend:latest
        #   ${{ secrets.DOCKERHUB_USERNAME }}/foodgram_backend:${{ github.sha }}
        cache-from: type=gha # Использование кэша GitHub Actions для ускорения сборок
        cache-to: type=gha,mode=max